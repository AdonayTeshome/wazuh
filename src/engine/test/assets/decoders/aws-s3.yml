---
name: decoder/aws-s3/0

metadata:
  description: Decoder for Amazon S3 server access logs
  references:
    - https://docs.aws.amazon.com/AmazonS3/latest/userguide/LogFormat.html
  product.name: Amazon S3 server access

sources:
  - decoder/aws/0

# Example of Wazuh's integration with AWS S3 server access log:
# {
#   "aws": {
#     "authentication_type": "AuthHeader",
#     "bucket_owner": "fac45794b871afb34180f310f0c33732a6d1471a59da4832ba68fbabade1f277",
#     "bucket": "awsexamplebucket1",
#     "bytes_sent": 3334567,
#     "cipher_suite": "ECDHE-RSA-AES128-GCM-SHA256",
#     "error_code": "NoSuchBucket",
#     "host_header": "s3.us-west-2.amazonaws.com",
#     "host_id": "XUbDuBMraSiljG+cPksjMSSiwGWriDlVsSURFQw+JQnDTUXAbKvcsm/eTPFvsiP/XV/VLi31234=",
#     "http_status": 200,
#     "key": "/photos/2019/08/perri.jpg",
#     "object_sent": 1234567,
#     "operation": "REST.GET.VERSIONING",
#     "referer": "http://www.amazon.com/webservices",
#     "remote_ip": "192.10.20.30",
#     "request_id": "3E57427F3EXAMPLE",
#     "request_uri": "GET /awsexamplebucket1/photos/2019/08/perri.jpg?x-foo=bar HTTP/1.1",
#     "requester": "fac45794b871afb34180f310f0c33732a6d1471a59da4832ba68fbabade1f277",
#     "signature_version": "SigV2",
#     "source": "s3_server_access",
#     "time": "10/Jul/1992:00:00:38 +0000",
#     "tls_version": "TLSv1.2",
#     "total_time": 70,
#     "turn_around_time": 10,
#     "user_agent": "curl/7.15.1",
#     "version_id": "3HO6la5C0M0V440Ptjfkd"
#   },
#   "integration": "aws"
# }

check:
  - wazuh.modules.aws.source: +s_eq/s3_server_access

# TODO: improve the multiple parsing (instead of using multiple files)
parse:
  logpar:
    - ~json.aws.request_uri: <http.request.method> <~http.url.original> HTTP/<http.version>
    - ~json.aws.request_uri: <http.request.method> <~http.url.original> http/<http.version>

normalize:
  - check:
      - ~json.aws.error_code: +ef_exists
    map:
      - event.outcome: failure

  - check:
      - ~json.aws.error_code: +ef_not_exists
    map:
      - event.outcome: success

  - map:
      - aws.s3access.authentication_type: $~json.aws.authentication_type
      - aws.s3access.bucket_owner: $~json.aws.bucket_owner
      - aws.s3access.bucket: $~json.aws.bucket
      - aws.s3access.bytes_sent: $~json.aws.bytes_sent
      - aws.s3access.cipher_suite: $~json.aws.cipher_suite
      - aws.s3access.error_code: $~json.aws.error_code
      - aws.s3access.host_header: $~json.aws.host_header
      - aws.s3access.host_id: $~json.aws.host_id
      - aws.s3access.http_status: $~json.aws.http_status
      - aws.s3access.key: $~json.aws.key
      - aws.s3access.object_size: $~json.aws.object_sent
      - aws.s3access.operation: $~json.aws.operation
      - aws.s3access.referrer: $~json.aws.referer
      - aws.s3access.remote_ip: $~json.aws.remote_ip
      - aws.s3access.request_id: $~json.aws.request_id
      - aws.s3access.request_uri: $~json.aws.request_uri
      - aws.s3access.requester: $~json.aws.requester
      - aws.s3access.signature_version: $~json.aws.signature_version
      - aws.s3access.tls_version: $~json.aws.tls_version
      - aws.s3access.total_time: $~json.aws.total_time
      - aws.s3access.turn_around_time: $~json.aws.turn_around_time
      - aws.s3access.user_agent: $~json.aws.user_agent
      - aws.s3access.version_id: $~json.aws.version_id

      - client.address: $~json.aws.remote_ip
      - client.ip: $~json.aws.remote_ip
      - client.user.id: $~json.aws.requester

      - cloud.provider: aws

      - event.action: $~json.aws.operation
      - event.category: +a_append/web
      - event.code: $~json.aws.error_code
      - event.duration: $~json.aws.total_time # ms - ECS transforms this field to nanoseconds
      - event.id: $~json.aws.request_id
      - event.kind: event
      - event.type: +a_append/access

      - http.request.referrer: $~json.aws.referer
      - http.response.body.bytes: $~json.aws.bytes_sent
      - http.response.status_code: $~json.aws.http_status

      - related.ip: +a_append/$~json.aws.remote_ip
      - related.user: +a_append/$~json.aws.bucket_owner

      - ~timestamp: $~json.aws.time

      - tls.cipher: $~json.aws.cipher_suite

      - ~json: +ef_delete
