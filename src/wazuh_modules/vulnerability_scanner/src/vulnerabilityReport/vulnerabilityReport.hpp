/*
 * Wazuh vulnerability scanner - Policy Manager
 * Copyright (C) 2015, Wazuh Inc.
 * November 22, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#ifndef _VULNERABILITY_REPORT_HPP
#define _VULNERABILITY_REPORT_HPP

#include "json.hpp"
#include "socketClient.hpp"
#include "vulnerabilityScanner.hpp"
#include <fcntl.h>
#include <netinet/in.h>
#include <sys/epoll.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/un.h>
#include <unistd.h>

// This can be modified according to requirements.
const std::string LOCALFILE_MQ {"1"};
const std::string PATH {"/var/ossec/queue/sockets/queue"};

class VulnerabilityReport
{
public:
    //static void sendReport(SocketClient<Socket<OSPrimitives>, EpollWrapper>& socketClient,
    static void sendReport(int vulnerabilityScannerFD,
                           const nlohmann::json& report,
                           const std::string& agentID,
                           const std::string& agentIP,
                           const std::string& agentName)
    {
        try
        {
            const std::string reportStr = report.dump();
            // This agent ID must be surrounded by square braces, agent name by curly braces. The string must end with
            // colon.
            const std::string info = "[" + agentID + "] (" + agentName + ") " + agentIP + "->" + VS_WM_NAME ":";

            // We must respect the LOCATION:<message> format.
            const std::string header = LOCALFILE_MQ + ":" + info;
            const std::string message = header + reportStr;

            send(vulnerabilityScannerFD, message.c_str(), message.size(), 0);
            //socketClient.send(message.c_str(), message.size());
        }
        catch (...)
        {
            std::cerr << "Couldn't send JSON report." << std::endl;
        }
    }
};

#endif // _VULNERABILITY_REPORT_HPP
