/*
 * Wazuh databaseFeedManager
 * Copyright (C) 2015, Wazuh Inc.
 * November 22, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "vulnerabilityReport_test.hpp"
#include "../vulnerabilityReport/vulnerabilityReport.hpp"
#include "socketClient.hpp"

TEST_F(VulnerabilityReportTest, demo)
{
    std::string report =
        R"({"vulnerability":{"package":{"name":"libnss3","source":"nss","version":"2:3.68.2-0ubuntu1.2","architecture":"amd64","condition":"Package unfixed"},"cve":"CVE-2023-5388","title":"Version of package nss affected by CVE-2023-5388 was updated but it is still vulnerable","rationale":"timing issue in RSA operations","severity":"Medium","published":"2023-10-23","status":"Active","type":"PACKAGE","references":["https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5388"]}})";
    nlohmann::json reportJson = nlohmann::json::parse(report);

    /*int vu_socket;
    struct sockaddr_un server_addr;

    vu_socket = socket(AF_UNIX, SOCK_DGRAM, 0);
    server_addr.sun_family = AF_UNIX;
    strcpy(server_addr.sun_path, PATH.c_str());

    connect(vu_socket, (struct sockaddr*)&server_addr, sizeof(server_addr));*/

    SocketClient<Socket<OSPrimitives>, EpollWrapper> socketClient {PATH};
    socketClient.connect([](const char* data, uint32_t size, const char* dataHeader, uint32_t sizeHeader) {},
                         SOCK_DGRAM);
    // VulnerabilityReport::sendReport(vu_socket, reportJson, "001", "127.0.0.1", "agent");
    //VulnerabilityReport::sendReport(socketClient, reportJson, "001", "127.0.0.1", "agent");
    VulnerabilityReport::sendReport(socketClient.getSocketDescriptor(), reportJson, "001", "127.0.0.1", "agent");

    // close(vu_socket);
}
