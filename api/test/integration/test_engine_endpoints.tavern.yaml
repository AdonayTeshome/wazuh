---
test_name: PUT /engine/config/runtime

stages:

  - name: Update engine config with a valid body
    request: &update_config
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/engine/config/runtime"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/json
      json:
        name: "key"
        content: "value"
    response:
      status_code: 200
      json:
        message: !anystr

  - name: Update engine config with a valid body and save
    request:
      verify: False
      <<: *update_config
      params:
        save: true
      json:
        name: "key"
        content: "value"
    response:
      status_code: 200
      json:
        message: !anystr

  - name: Try to update config with an invalid name
    request:
      verify: False
      <<: *update_config
      json:
        name: "key"
        content: "value"
    response:
      status_code: 200
      json:
        invalid_name: ""
      response:
        status_code: 400
        json:
          error: 1129

  - name: Try to update config with an invalid content
    request:
      verify: False
      <<: *update_config
      json:
        name: "server_timeout"
    response:
      status_code: 400
      json:
          error: 1130 # TODO: create WazuhError

---
test_name: GET /engine/config/runtime
stages:

  - name: Get all engine runtime configuration key-values
    request: &get_config
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/engine/config/runtime"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/json
    response:
      status_code: 200
      json:
        data:
          status: "OK"
          error: null
          content:
            - key: "value"
        error: 0

  - name: Try to get non existent value
    request:
      verify: False
      <<: *get_config
      params:
        name: server_timeout
    response:
      status_code: 200
      json:
        data:
          status: "ERROR"
          error: "The specified configuration does not exist: 'server_timeout'"
        error: 0

  - name: Get engine runtime configuration value
    request:
      verify: False
      <<: *get_config
      params:
        name: key
    response:
      status_code: 200
      json:
        data:
          status: "OK"
          error: null
          content: "value"
        error: 0

  - name: Filter configuration by query
      request:
        verify: False
        <<: *get_config
        params:
          q: key=key
      response:
        status_code: 200
        json:
          data:
            status: "OK"
            error: null
            content: "value"
          error: 0
  
  - name: Get configuration with select
      request:
        verify: False
        <<: *get_config
        params:
          select: 
      response:
        status_code: 200
        json:

  - name: Get configuration with sort
      request:
        verify: False
        <<: *get_config
        params:
          select: 
      response:
        status_code: 200
        json:
  
  - name: Get configuration with offset and limit
      request:
        verify: False
        <<: *get_config
        params:
          offset: 0 
          limit: 5
      response:
        status_code: 200
        json:
